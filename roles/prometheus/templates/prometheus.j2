# my global config
global:
  scrape_interval: 15s # Set the scrape interval to every 15 seconds. Default is every 1 minute.
  evaluation_interval: 15s # Evaluate rules every 15 seconds. The default is every 1 minute.
  # scrape_timeout is set to the global default (10s).

{% if groups[alertmanager_group]|length > 0 %}
# Alertmanager configuration
alerting:
  alertmanagers:
    - static_configs:
        - targets:
{% for host in groups[alertmanager_group] %}
          - {{ hostvars[host]['ansible_default_ipv4']['address'] }}:9093
{% endfor %}
          # - alertmanager:9093
{% endif %}

# Load rules once and periodically evaluate them according to the global 'evaluation_interval'.
rule_files:
{% if groups[alertmanager_group]|length > 0 %}
    - /etc/prometheus/alertmanager/prometheus-exporter.yml
{% if groups[node_exporter_group]|length > 0 %}
    - /etc/prometheus/alertmanager/node-exporter.yml
{% endif %}
{% if groups[thanos_group]|length > 0 %}
    # Rules taken from https://github.com/thanos-io/thanos/blob/main/examples/alerts/alerts.md
    - /etc/prometheus/alertmanager/thanos-absent.yml
    - /etc/prometheus/alertmanager/thanos-compact.yml
    - /etc/prometheus/alertmanager/thanos-query.yml
    - /etc/prometheus/alertmanager/thanos-receive.yml
    - /etc/prometheus/alertmanager/thanos-store.yml
{% endif %}
{% if groups[loki']|length > 0 %}
    - /etc/prometheus/alertmanager/loki.yml
{% endif %}
{% if groups[all']|length > 0 %}
    - /etc/prometheus/alertmanager/promtail.yml
{% endif %}
{% endif %}

  # - "first_rules.yml"
  # - "second_rules.yml"

# A scrape configuration containing exactly one endpoint to scrape:
# Here it's Prometheus itself.
scrape_configs:
  # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config.
  - job_name: "prometheus"

    # metrics_path defaults to '/metrics'
    # scheme defaults to 'http'.

    static_configs:
      - targets: ["localhost:9090"]

{% for host in groups[prometheus_group] %}
   #prometheus {{ hostvars[host]['ansible_default_ipv4']['address'] }}
{% endfor %}

{% if groups[alertmanager_group]|length > 0 %}
  - job_name: "alertmanager"
    static_configs:
      - targets:
{% for host in groups[alertmanager_group] %}
        - {{ hostvars[host]['ansible_default_ipv4']['address'] }}:9093
{% endfor %}
{% endif %}

{% if groups[node_exporter_group]|length > 0 %}
  - job_name: "node_exporter"
    static_configs:
      - targets:
{% for host in groups[node_exporter_group] %}
        - {{ hostvars[host]['ansible_default_ipv4']['address'] }}:9100
{% endfor %}
{% endif %}

{% if groups[libvirt_exporter_group]|length > 0 %}
  - job_name: "libvirt_exporter"
    static_configs:
      - targets:
{% for host in groups[libvirt_exporter_group] %}
        - {{ hostvars[host]['ansible_default_ipv4']['address'] }}:9177
{% endfor %}
{% endif %}

{% if groups[podman_exporter_group]|length > 0 %}
  - job_name: "podman_exporter"
    static_configs:
      - targets:
{% for host in groups[podman_exporter_group] %}
        - {{ hostvars[host]['ansible_default_ipv4']['address'] }}:9882
{% endfor %}
{% endif %}

{% if groups[haproxy_exporter_group]|length > 0 %}
  - job_name: "haproxy_exporter"
    static_configs:
      - targets:
{% for host in groups[haproxy_exporter_group] %}
        - {{ hostvars[host]['ansible_default_ipv4']['address'] }}:9101
{% endfor %}
{% endif %}

{% if groups[redfish_exporter_group]|length > 0 %}
  - job_name: 'redfish-exporter_group
    honor_labels: true
    # metrics_path defaults to '/metrics'
    metrics_path: /redfish
    # scheme defaults to 'http'.
    scrape_interval: 1m
    scrape_timeout: 1m
    params:
      job: ['redfish/openstack']
    static_configs:
      - targets:
{% for host in groups[redfish_exporter_group] %}
        - {{ hostvars[host]['ipmi_ip'] }}
{% endfor %}
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: {{ hostvars[groups[prometheus_group][0]]['ansible_host'] }}:9220
{% endif %}

{% if groups[loki']|length > 0 %}
  - job_name: "loki"
    static_configs:
      - targets:
{% for host in groups[loki'] %}
        - {{ hostvars[host]['ansible_default_ipv4']['address'] }}:3100
{% endfor %}
{% endif %}

{% if groups[all']|length > 0 %}
  - job_name: "promtail"
    static_configs:
      - targets:
{% for host in groups[all'] %}
        - {{ hostvars[host]['ansible_default_ipv4']['address'] }}:9080
{% endfor %}
{% endif %}

{% if groups[thanos_group]|length > 0 %}
  - job_name: "thanos-compact"
    static_configs:
      - targets:
{% for host in groups[thanos_group] %}
        - {{ hostvars[host]['ansible_default_ipv4']['address'] }}:10902
{% endfor %}

  - job_name: "thanos-query"
    static_configs:
      - targets:
{% for host in groups[thanos_group] %}
        - {{ hostvars[host]['ansible_default_ipv4']['address'] }}:10904
{% endfor %}

  - job_name: "thanos-store"
    static_configs:
      - targets:
{% for host in groups[thanos_group] %}
        - {{ hostvars[host]['ansible_default_ipv4']['address'] }}:10906
{% endfor %}

  - job_name: "thanos-receive"
    static_configs:
      - targets:
{% for host in groups[thanos_group] %}
        - {{ hostvars[host]['ansible_default_ipv4']['address'] }}:10909
{% endfor %}

remote_write:
- url: http://{{ hostvars[groups[thanos_group][0]]['ansible_host'] }}:10908/api/v1/receive
{% endif %}

