---
- name: Create container log dir
  ansible.builtin.file:
    path: /var/log/containers
    state: directory
    mode: '0755'
  tags: grafana

# Set to group wheel and 775 to allow syncing of dashboards etc
- name: Create grafana config dir
  ansible.builtin.file:
    path: /etc/grafana/provisioning/{{ item }}/
    state: directory
    group: wheel
    mode: '0775'
  tags: grafana
  with_items:
    - datasources
    - dashboards

- name: create grafana prometheus datasource template file
  template: src=grafana-prometheus-datasource.j2 dest=/etc/grafana/provisioning/datasources/prometheus.yml
  when: (groups['prometheus'] is defined) and (groups['prometheus'] | type_debug == 'list') and (groups['prometheus'] | length > 0)
  tags: grafana
  notify: Restart Grafana

- name: create grafana loki datasource template file
  template: src=grafana-loki-datasource.j2 dest=/etc/grafana/provisioning/datasources/loki.yml
  when: (groups['loki'] is defined) and (groups['loki'] | type_debug == 'list') and (groups['loki'] | length > 0)
  tags: grafana
  notify: Restart Grafana

- name: create grafana prometheus dashboards template file
  template: src=grafana-dashboards-datasource.j2 dest=/etc/grafana/provisioning/dashboards/dashboard.yml
  tags: grafana
  notify: Restart Grafana

- name: sync grafana dashboards
  become: no
  ansible.posix.synchronize:
    src: files/dashboards
    dest: /etc/grafana/provisioning/
    times: false
  tags: grafana
  notify: Restart Grafana

- name: Run grafana container
  containers.podman.podman_container:
    name: "{{ grafana_name }}"
    image: "{{ grafana_container }}"
    state: started
    restart: true
    ports:
      - "{{ grafana_port }}:{{ grafana_port }}"
    volume:
      - "/etc/grafana/provisioning/datasources/prometheus.yml:/etc/grafana/provisioning/datasources/prometheus.yml"
      - "/etc/grafana/provisioning/datasources/loki.yml:/etc/grafana/provisioning/datasources/loki.yml"
      - "/etc/grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards"
    log_options: "path=/var/log/containers/{{ grafana_name }}.json"
    log_driver: k8s-file
  tags: grafana
