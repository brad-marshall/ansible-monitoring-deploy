---

- name: Deploy node exporter
  hosts: node_exporter
  become: yes

#  pre_tasks:
#    - setup:
#      register: node_facts
#
#    - ansible.builtin.debug:
#        msg: Node facts are {{ node_facts }}

  tasks:
    - name: Run node exporter container
      containers.podman.podman_container:
        name: node-exporter-ansible
        image: quay.io/prometheus/node-exporter
        state: started
        ports:
          - "9100:9100"
        #volumes:
        #  - "/etc/prometheus.d:/etc/prometheus.d"
      tags: exporter

- name: Deploy libvirt exporter
  hosts: libvirt_exporter
  become: yes

  tasks:

    - name: Install policy tools
      yum: pkg=policycoreutils-python-utils
           state=installed
      tags: exporter
    
    - name: Remove SELinux policy package
      command: semodule -r ansible-libvirtexporter
      failed_when: false
      tags: exporter
    
    - name: Copy SELinux type enforcement file
      copy: src=ansible-libvirtexporter.te
            dest=/tmp/
      tags: exporter
    
    - name: Compile SELinux module file
      command: checkmodule -M -m -o /tmp/ansible-libvirtexporter.mod /tmp/ansible-libvirtexporter.te
      tags: exporter
    
    - name: Build SELinux policy package
      command: semodule_package -o /tmp/ansible-libvirtexporter.pp -m /tmp/ansible-libvirtexporter.mod
      tags: exporter
    
    - name: Load SELinux policy package
      command: semodule -i /tmp/ansible-libvirtexporter.pp
      tags: exporter
    
    - name: Remove temporary files
      file: path=/tmp/ansible-libvirtexporter.*
            state=absent
      tags: exporter

    - name: Run libvirt exporter container
      containers.podman.podman_container:
        name: libvirt-exporter-ansible
        image: docker.io/alekseizakharov/libvirt-exporter
        state: started
        ports:
          - "9177:9177"
        volume:
          - "/var/run/libvirt:/var/run/libvirt:z"
      tags: exporter

- name: Deploy prometheus alertmanager
  hosts: alertmanager
  become: yes

  tasks:
    - name: Run prometheus container
      containers.podman.podman_container:
        name: alertmanager-ansible
        image: quay.io/prometheus/alertmanager
        state: started
        ports:
          - "9093:9093"
      tags: alertmanager

- name: Deploy prometheus
  hosts: prometheus
  become: yes

  tasks:
    - name: Create prometheus config dir
      ansible.builtin.file:
        path: /etc/prometheus
        state: directory
        mode: '0755'
      tags: prometheus

    - name: create prometheus template file
      template: src=prometheus.j2 dest=/etc/prometheus/prometheus.yml
      tags: prometheus

    - name: Run prometheus container
      containers.podman.podman_container:
        name: prometheus-ansible
        image: quay.io/prometheus/prometheus
        state: started
        ports:
          - "9090:9090"
        volume:
          - "/etc/prometheus:/etc/prometheus"
      tags: prometheus

- name: Deploy grafana
  hosts: grafana
  become: yes

  tasks:

    # Set to group wheel and 775 to allow syncing of dashboards etc
    - name: Create grafana config dir
      ansible.builtin.file:
        path: /etc/grafana/provisioning/{{ item }}/
        state: directory
        group: wheel
        mode: '0775'
      tags: grafana
      with_items:
        - datasources
        - dashboards

    - name: create grafana prometheus datasource template file
      template: src=grafana-prometheus-datasource.j2 dest=/etc/grafana/provisioning/datasources/prometheus.yml
      tags: grafana

    - name: create grafana prometheus dashboards template file
      template: src=grafana-dashboards-datasource.j2 dest=/etc/grafana/provisioning/dashboards/dashboard.yml
      tags: grafana

    - name: sync grafana dashboards
      become: no
      ansible.posix.synchronize:
        src: files/dashboards
        dest: /etc/grafana/provisioning/
        times: false
      tags: grafana

    - name: Run grafana container
      containers.podman.podman_container:
        name: grafana-ansible
        image: docker.io/grafana/grafana
        state: started
        restart: true
        ports:
          - "3000:3000"
        volume:
          - "/etc/grafana/provisioning/datasources/prometheus.yml:/etc/grafana/provisioning/datasources/prometheus.yml"
          - "/etc/grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards"
      tags: grafana
